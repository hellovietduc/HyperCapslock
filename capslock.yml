---
title: Hyper Capslock
url: https://github.com/hellovietduc/HyperCapslock
version: 3.1.0
maintainers: [ Duc ]
author: Vonng(rh@vonng.com)
website: https://github.com/hellovietduc/HyperCapslock
json_url: https://github.com/hellovietduc/HyperCapslock/raw/master/mac_v3/capslock.json
import_url: karabiner://karabiner/assets/complex_modifications/import?url=https://github.com/hellovietduc/HyperCapslock/raw/master/mac_v3/capslock.json
gallery_url: https://ke-complex-modifications.pqrs.org/#emulation-modes
repo: https://github.com/hellovietduc/HyperCapslock


rules:

  ################################################################
  #                    Capslock to Esc/Hyper                     #
  ################################################################
  - description: CapsLock to Hyper
    manipulators:

      - description: 'capslock = esc(click) | hyper(hold)'
        type: basic
        from: { key_code: caps_lock ,modifiers: { optional: [ any ] } }
        to: [ { key_code: right_shift,modifiers: [ right_command,right_control,right_option ] } ]
        to_if_alone: [ { key_code: escape } ]

      - description: 'escape = capslock switch'
        type: basic
        from: { key_code: escape, modifiers: { optional: [ caps_lock ], mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: caps_lock , modifiers: [ left_control ] } ]

      - description: 'spacebar = language switch'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: z , modifiers: [ left_option ] } ]

      - description: 'command + spacebar = emoji'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: spacebar , modifiers: [ left_control,left_command ] } ]


  ################################################################
  #                       Hyper Navigation                       #
  ################################################################
  - description: Hyper Navigation
    manipulators:

      #==========================================================#
      # ( h ) + ( ⌘⌥⇧⌃ )  -> ( left )                            #
      #==========================================================#
      # command: selection
      - description: 'command + h = shift + left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + h = ctrl + shift + tab (prev tab)'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_control , left_shift ] } ]

      # normal: cursor move
      - description: 'h = left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow } ]


      #==========================================================#
      # ( j ) + ( ⌘⌥⇧⌃ )  -> ( down )                            #
      #==========================================================#
      # command: selection
      - description: 'command + j = shift + down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_shift ] } ]

      # shift: mouse wheel
      - description: 'shift + j = mouse wheel down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_shift,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 64 } } ]

      # normal: cursor move
      - description: 'j = down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow } ]


      #==========================================================#
      # ( k ) + ( ⌘⌥⇧⌃ )  -> ( up )                              #
      #==========================================================#
      # command: selection
      - description: 'command + k = shift + up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_shift ] } ]

      # shift: mouse wheel
      - description: 'shift + k = mouse wheel up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_shift,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -64 } } ]

      # normal: cursor move
      - description: 'k = up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow } ]


      #==========================================================#
      # ( l ) + ( ⌘⌥⇧⌃ )  -> ( right )                           #
      #==========================================================#
      # command: selection
      - description: 'command + l = shift + right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + l = command + tab (next tab)'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_control ] } ]

      # normal: cursor move
      - description: 'l = right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow } ]



      #==========================================================#
      # ( u ) + ( ⌘⌥⇧⌃ )  -> ( Cmd + left )                      #
      #==========================================================#
      # command: line selection
      - description: 'command + u = cmd + shift + left'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_shift,left_command ] } ]

      # shift: tab/win management
      - description: 'shift + i = command + shift + tab (prev application)'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command, left_shift ] } ]

      # normal: cursor move
      - description: 'u = cmd + left'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_command ] } ]



      #==========================================================#
      # ( i ) + ( ⌘⌥⇧⌃ )  -> ( Option + left )                   #
      #==========================================================#
      # command: word selection
      - description: 'command + i = option + shift + left'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_option, left_shift ] } ]

      # normal: cursor move
      - description: 'i = option + left'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_option ] } ]


      #==========================================================#
      # ( o ) + ( ⌘⌥⇧⌃ )  -> ( Option + right )                  #
      #==========================================================#
      # command: word selection
      - description: 'command + o = option + shift + right'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift,left_option ] } ]

      # normal: cursor move
      - description: 'o = option + right'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_option ] } ]


      #==========================================================#
      # ( p ) + ( ⌘⌥⇧⌃ )  -> ( Cmd + right )                     #
      #==========================================================#
      # command: line selection
      - description: 'command + p = cmd + shift + right'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift,left_command ] } ]

      # shift: tab/win management
      - description: 'shift + o = command + tab (next application)'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command ] } ]

      # normal: cursor move
      - description: 'p = cmd + right'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_command ] } ]



  ################################################################
  #                       Hyper Deletion                         #
  ################################################################
  - description: Hyper Deletion
    manipulators:

      # + shift = move line up /down
      - description: 'shift + m = move line down'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ left_shift,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow, modifiers: [ left_option ] } ]

      - description: 'shift + , = move line up'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ left_shift,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow, modifiers: [ left_option ] } ]

      # + command = delete line
      - description: 'command + n = delete whole line'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow, modifiers: [ left_shift,left_command ] } , { key_code: delete_or_backspace } ]

      - description: 'command + . = delete whole line'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow, modifiers: [ left_shift,left_command ] } , { key_code: delete_or_backspace } ]

      # delete char and word
      - description: 'n = delete a word ahead'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace, modifiers: [ left_option ] } ]

      - description: 'm = delete a char ahead'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace } ]

      - description: ', = delete a char after'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward } ]

      - description: '. = delete a word after'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward, modifiers: [ left_option ] } ]


  ################################################################
  #                  Hyper Special Characters                    #
  ################################################################
  - description: Hyper Special Characters
    manipulators:

      # grave
      - description: 'q -> `'
        type: basic
        from: { key_code: 'q', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde } ]

      # underscore
      - description: 'w -> _'
        type: basic
        from: { key_code: 'w', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: hyphen, modifiers: [left_shift] } ]

      # dash
      - description: 'e -> -'
        type: basic
        from: { key_code: 'e', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: hyphen } ]

      # equal sign
      - description: 'r -> ='
        type: basic
        from: { key_code: 'r', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign } ]

      # plus sign
      - description: 't -> +'
        type: basic
        from: { key_code: t, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign, modifiers: [left_shift] } ]

      # open curly brace
      - description: 'a -> {'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: open_bracket, modifiers: [left_shift] } ]

      # close curly brace
      - description: 's -> }'
        type: basic
        from: { key_code: s, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: close_bracket, modifiers: [left_shift] } ]

      # open parenthesis
      - description: 'd -> ('
        type: basic
        from: { key_code: d, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '9', modifiers: [left_shift] } ]

      # close parenthesis
      - description: 'f -> )'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '0', modifiers: [left_shift] } ]

      # open bracket
      - description: 'c -> ['
        type: basic
        from: { key_code: c, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: open_bracket } ]

      # close bracket
      - description: 'v -> ]'
        type: basic
        from: { key_code: v, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: close_bracket } ]


  ################################################################
  #                      Hyper Application                       #
  ################################################################
  - description: Hyper Application
    manipulators:


      #==========================================================#
      # ( command + r ) --> Linear                               #
      #==========================================================#
      - description: 'command + r = Linear'
        type: basic
        from: { key_code: r, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Linear } ]


      #==========================================================#
      # ( command + d ) --> Finder                               #
      #==========================================================#
      - description: 'command + d = Finder'
        type: basic
        from: { key_code: d, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Finder } ]

      #==========================================================#
      # ( command + t ) --> iTerm                                #
      #==========================================================#
      - description: 'command + t = iTerm'
        type: basic
        from: { key_code: t, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a iTerm } ]

      #==========================================================#
      # ( command + a ) --> Microsoft Teams                      #
      #==========================================================#
      - description: 'command + a = Microsoft Teams'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Microsoft Teams (work or school)' } ]


      #==========================================================#
      # ( command + s ) --> Logseq                               #
      #==========================================================#
      - description: 'command + s = Logseq'
        type: basic
        from: { key_code: s, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Logseq } ]

      #==========================================================#
      # ( command + f ) --> Figma                                #
      #==========================================================#
      - description: 'command + f = Figma'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Figma } ]

      #==========================================================#
      # ( command + c ) --> Arc                                  #
      #==========================================================#
      - description: 'command + c = Arc'
        type: basic
        from: { key_code: c, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Arc } ]

      #==========================================================#
      # ( command + v ) --> VS Code                              #
      #==========================================================#
      - description: 'command + v = VS Code'
        type: basic
        from: { key_code: v, modifiers: { mandatory: [left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Visual Studio Code' } ]



  ################################################################
  #                       Hyper Functional                       #
  ################################################################
  - description: Hyper Functional
    manipulators:


      #==========================================================#
      # F1 - F3 --> Desktop (require preference->shortcut setup) #
      #==========================================================#
      - description: 'command + F1 = desktop 1'
        type: basic
        from: { key_code: f1, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '1' , modifiers: [ left_control ] } ]

      - description: 'command + F2 = desktop 2'
        type: basic
        from: { key_code: f2, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '2' , modifiers: [ left_control ] } ]

      - description: 'command + F3 = desktop 3'
        type: basic
        from: { key_code: f3, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '3' , modifiers: [ left_control ] } ]


      #==========================================================#
      # F1 - F12 --> Real Function                               #
      #==========================================================#
      - description: 'F1 = display_brightness_decrement'
        type: basic
        from: { key_code: f1, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: display_brightness_decrement } ]

      - description: 'F2 = display_brightness_increment'
        type: basic
        from: { key_code: f2, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: display_brightness_increment } ]

      - description: 'F3 = Expose All'
        type: basic
        from: { key_code: f3, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]

      - description: 'F4 = LaunchPad'
        type: basic
        from: { key_code: f4, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Launchpad' } ]

      - description: 'F5 = illumination_decrement'
        type: basic
        from: { key_code: f5, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: illumination_decrement } ]

      - description: 'F6 = illumination_increment'
        type: basic
        from: { key_code: f6, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: illumination_increment } ]

      - description: 'F7 = rewind'
        type: basic
        from: { key_code: f7, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: rewind } ]

      - description: 'F8 = play_or_pause'
        type: basic
        from: { key_code: f8, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: play_or_pause } ]

      - description: 'F9 = fastforward'
        type: basic
        from: { key_code: f9, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: fastforward } ]

      - description: 'F10 = mute'
        type: basic
        from: { key_code: f10, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: mute } ]

      - description: 'F11 = volume_decrement'
        type: basic
        from: { key_code: f11, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: volume_decrement } ]

      - description: 'F12 = volume_increment'
        type: basic
        from: { key_code: f12, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: volume_increment } ]

      #==========================================================#
      # ~ --> area selection snapshot                            #
      #==========================================================#
      - description: 'command + ~ = area snap to desktop file'
        type: basic
        from: { key_code: grave_accent_and_tilde, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '4' , modifiers: [ left_shift,left_command ] } ]

      - description: '~ = area snap to clipboard'
        type: basic
        from: { key_code: grave_accent_and_tilde, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '4' , modifiers: [ left_shift,left_command,left_control ] } ]

      #==========================================================#
      # Screenshot (F13) --> Screenshot                          #
      #==========================================================#
      - description: 'command + ~ = area snap to desktop file'
        type: basic
        from: { key_code: f13, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '3' , modifiers: [ left_shift,left_command ] } ]

      - description: '~ = area snap to clipboard'
        type: basic
        from: { key_code: f13, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '3' , modifiers: [ left_shift,left_command,left_control ] } ]

      #==========================================================#
      # ScrollLock (F14) --> Advanced Screenshot                 #
      #==========================================================#
      - description: 'command + ScrollLock = area snap to desktop file'
        type: basic
        from: { key_code: f14, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '6' , modifiers: [ left_shift,left_command ] } ]

      - description: 'ScrollLock = screen video capture'
        type: basic
        from: { key_code: f14, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '5' , modifiers: [ left_shift,left_command ] } ]

      #==========================================================#
      # Pause (F15) --> play_or_pause                            #
      #==========================================================#
      - description: 'ScrollLock = screen video capture'
        type: basic
        from: { key_code: f15, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: play_or_pause } ]

      #==========================================================#
      # Ins/Del/Home/End/PgUp/PgDn -> Fine-Grained Control       #
      #==========================================================#
      - description: 'insert = display_brightness_increment'
        type: basic
        from: { key_code: insert, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: display_brightness_increment, modifiers: [ left_shift, left_option ] } ]

      - description: 'delete_forward = display_brightness_decrement'
        type: basic
        from: { key_code: delete_forward, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: display_brightness_decrement, modifiers: [ left_shift, left_option ] } ]

      - description: 'home = illumination_increment'
        type: basic
        from: { key_code: home, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: illumination_increment, modifiers: [ left_shift, left_option ] } ]

      - description: 'end = illumination_decrement'
        type: basic
        from: { key_code: end, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: illumination_decrement, modifiers: [ left_shift, left_option ] } ]

      - description: 'page_up = volume_increment'
        type: basic
        from: { key_code: page_up, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: volume_increment, modifiers: [ left_shift, left_option ] } ]

      - description: 'page_down = volume_decrement'
        type: basic
        from: { key_code: page_down, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: volume_decrement, modifiers: [ left_shift, left_option ] } ]


  ################################################################
  #                           App: Dash                          #
  ################################################################
  - description: 'Hyper App: Dash'
    manipulators:

      #==========================================================#
      # shift + j -> down                                        #
      #==========================================================#
      - description: 'shift + j = down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [left_shift] } }
        to: [ { key_code: page_down } ]
        conditions:
          - bundle_identifiers: [ '^com\.kapeli\.dash-setapp$' ]
            type: frontmost_application_if

      #==========================================================#
      # cmd + shift + j -> section down                          #
      #==========================================================#
      - description: 'shift + j = section down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [left_command, left_shift] } }
        to: [ { key_code: down_arrow, modifiers: [left_option] } ]
        conditions:
          - bundle_identifiers: [ '^com\.kapeli\.dash-setapp$' ]
            type: frontmost_application_if

      #==========================================================#
      # shift + k -> up                                          #
      #==========================================================#
      - description: 'shift + k = up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [left_shift] } }
        to: [ { key_code: page_up } ]
        conditions:
          - bundle_identifiers: [ '^com\.kapeli\.dash-setapp$' ]
            type: frontmost_application_if

      #==========================================================#
      # cmd + shift + k -> section up                            #
      #==========================================================#
      - description: 'shift + k = section up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [left_command, left_shift] } }
        to: [ { key_code: up_arrow, modifiers: [left_option] } ]
        conditions:
          - bundle_identifiers: [ '^com\.kapeli\.dash-setapp$' ]
            type: frontmost_application_if

...
